//Change Brightness with LDR
#include "stm32f412zx.h"

int main(void)
{
        
    RCC->AHB1ENR = 0x3; // Enable GPIO Port A and B clock
    GPIOA->MODER =0x00555500; //Making PA4 to PA11 as ouput for Seven Segment
    GPIOB->MODER = 0x1; // Set PB0 as output for LED
        
	      int DELAY_TIME =20; // Delay time in milliseconds
        int FADE_TIME =2000;
	  
        int num_steps = FADE_TIME / DELAY_TIME;
        int step_delay = FADE_TIME / num_steps;
    
    while(1)
    {
        // Read voltage level on PA1
        uint32_t voltage_level = GPIOA->IDR & 0x2;
        
        // Control LED at PA7 based on voltage level
        if (voltage_level)
					
				{//GPIOA->ODR=0x100;//9(Hexadecimal number for glowing 9)
					//GPIOA->ODR=0x400;//0(Hexadecimal number for glowing 0)
					GPIOA->ODR=0x780;//7(Hexadecimal number for glowing 7)
					for (int i = 0; i < num_steps; i++)
                             {
                             // Calculate the duty cycle
                             int duty_cycle = ((i + 1) * 100) / num_steps;
                             // Turn on the LED
                             GPIOB->ODR = 0x0;
                             // Delay for the appropriate amount of time
                             int delay = duty_cycle * step_delay / 100;
                             for (volatile int j = 0; j < delay * 1000; j++);
															  
                              // Turn off the LED
                             GPIOB->ODR = 0x1;
                             int off_delay = step_delay - delay;
                             for (volatile int j = 0; j < off_delay * 1000; j++);
															  
                                
                             }
													 }
                        
        else
				{GPIOA->ODR=0x790;//1(Hexadecimal number for glowing 1)
					GPIOB->ODR |= 0x1; // Turn off LED
    }
}}